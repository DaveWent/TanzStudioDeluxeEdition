/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.CVistaReinscripcion;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author cristian
 */
public class VReiscripcion extends javax.swing.JFrame implements 
        Interfaces.IReinscripcion, ActionListener, ItemListener{

    /**
     * Creates new form Reiscripcion
     */
    jpSeleccionMaterias jpSeleccionMaterias = new jpSeleccionMaterias();
    CVistaReinscripcion control;
    
    public VReiscripcion(int matricula) throws Exception {
        initComponents();
        
        jpSeleccionMaterias.setBounds(20, 50, 670, 400);
       // jpSeleccionMaterias.setbou
        this.add(jpSeleccionMaterias);
         control= new CVistaReinscripcion(matricula, this);
        lbMatricula.setText("Matricula: "+matricula);
        control.inicializarTabla(jpSeleccionMaterias.getTbCursos());
        control.actualizaComboBoxCurso(jpSeleccionMaterias.getCbCurso(), matricula);
        control.actualizaComboBoxClases(jpSeleccionMaterias.getCbClase(),
                (String) jpSeleccionMaterias.getCbCurso().getSelectedItem());
        jpSeleccionMaterias.getCbCurso().addItemListener(this);
        jpSeleccionMaterias.getBtAgregar().addActionListener(this);
        jpSeleccionMaterias.getBtQuitar().addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lbMatricula = new javax.swing.JLabel();
        lbNombre = new javax.swing.JLabel();
        btCancelar = new javax.swing.JButton();
        btReinscribir = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reinscripcion");
        setMaximumSize(new java.awt.Dimension(705, 470));
        setMinimumSize(new java.awt.Dimension(705, 470));
        setPreferredSize(new java.awt.Dimension(705, 470));
        setResizable(false);
        getContentPane().setLayout(null);

        lbMatricula.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbMatricula.setText("Matricula:");
        getContentPane().add(lbMatricula);
        lbMatricula.setBounds(50, 11, 134, 23);

        lbNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbNombre.setText("Nombre:");
        getContentPane().add(lbNombre);
        lbNombre.setBounds(221, 11, 435, 23);

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btCancelar);
        btCancelar.setBounds(200, 410, 130, 30);

        btReinscribir.setText("Reinscribir");
        btReinscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReinscribirActionPerformed(evt);
            }
        });
        getContentPane().add(btReinscribir);
        btReinscribir.setBounds(360, 410, 130, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
         int opcion = JOptionPane.showConfirmDialog(null, "¿Está seguro de que quiere cancelar?",
                    "Borrado", JOptionPane.YES_NO_OPTION);
            if (opcion == 0) {
                System.out.println("cerrar");
               dispose();
            }
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btReinscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReinscribirActionPerformed
        try {
            control.validarPanelSeleccionMaterias(jpSeleccionMaterias.getTbCursos());
            control.Reinscribir();
        } catch (SQLException ex) {
            Logger.getLogger(VReiscripcion.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btReinscribirActionPerformed

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btReinscribir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbMatricula;
    private javax.swing.JLabel lbNombre;
    // End of variables declaration//GEN-END:variables

    public void enviaNombre(String nombre) {
        lbNombre.setText("Nombre: "+nombre);
    }

    public void actionPerformed(ActionEvent ae) {
        //identifica si el que genero el evento fue el boton agregar
        if (ae.getSource() == jpSeleccionMaterias.getBtAgregar()) {
            String curso = (String) jpSeleccionMaterias.getCbCurso().getSelectedItem();
            String clase = (String) jpSeleccionMaterias.getCbClase().getSelectedItem();
            control.actualizaTabla(curso, clase, jpSeleccionMaterias.getTbCursos());
        }

        //identifica si el que genero el evento fue el boton quitar 
        if (ae.getSource() == jpSeleccionMaterias.getBtQuitar()) {
            int fila = jpSeleccionMaterias.getFila();
            if (fila != -1) {
                control.eliminarFila(fila, jpSeleccionMaterias.getTbCursos());
            }

        }
    }

    public void actualizaComboBoxCurso(JComboBox cbCursos) {
        jpSeleccionMaterias.setCbCurso(cbCursos);
    }

    public void actualizaComboBoxClases(JComboBox cbClases) {
        jpSeleccionMaterias.setCbClase( cbClases );
    }

    public void inicializarTabla(JTable tbCurso) {
        jpSeleccionMaterias.setTbCursos( tbCurso );
    }

    public void actualizarTabla(JTable tbCurso) {
        jpSeleccionMaterias.setTbCursos( tbCurso );
    }
    
    public void itemStateChanged(ItemEvent ie) {
        try {
            //identifica si cbCursos genero la accion
            if (ie.getSource() == jpSeleccionMaterias.getCbCurso()) {
                //identifica si cbCurso genero la accion
                control.actualizaComboBoxClases(jpSeleccionMaterias.getCbClase(),
                        (String) jpSeleccionMaterias.getCbCurso().getSelectedItem());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    null, JOptionPane.ERROR_MESSAGE, null);
        }
    }
}
