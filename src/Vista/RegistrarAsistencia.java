/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.ControlVistaRegistrarAsistencia;
import Modelo.Alumno;
import Modelo.RenglonAlumno;
import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ScrollPaneConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/**
 *
 * @author cristian
 */
public class RegistrarAsistencia extends javax.swing.JFrame implements Interfaces.InterfaceRegistrarAsistencia,
        ItemListener, ChangeListener {

    /**
     * Creates new form RegistrarAsistencia
     */
    DefaultTableModel modelo;
    ControlVistaRegistrarAsistencia controlVista;
    private boolean bandera;
    private JScrollPane jScrollPane;
    boolean modo;
    
    public RegistrarAsistencia(boolean modo) throws Exception {

        initComponents();
        initComponents2();
        this.setBounds(200, 100, 1000, 400);
        controlVista = new ControlVistaRegistrarAsistencia(this, modo);
        acciones();
        controlVista.actualizaComboBoxCurso(cbCurso);
        controlVista.actualizaComboBoxClase(cbClase, (String) cbCurso.getSelectedItem());
        setEventoMouseClicked(tbAsistencia);
        this.modo=modo;

    }

    public void initComponents2() {
        
        jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        tbAsistencia.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        this.jScrollPane1.setVisible(false);
         if(modo=true){
             jScrollPane1.setBounds(125,80, 700, 210);
         }
        
        this.repaint();
    }

    public void acciones() {
        cbCurso.addItemListener(this);
        cbClase.addItemListener(this);
    }

    public void Reinicializar() {
        tbAsistencia = null;
    }

    private void setEventoMouseClicked(JTable tbl) {
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                tblMouseClicked(e);
            }
        });
    }

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {

        String cadena = "";

        int row = tbAsistencia.rowAtPoint(evt.getPoint());
        int col = tbAsistencia.columnAtPoint(evt.getPoint());
        int matricula = -1;
        if (col > 1) {
            matricula = Integer.parseInt((String) tbAsistencia.getValueAt(row, 0).toString());
            cadena = "fila" + col + " renglon " + row + " Matricula" + matricula;
            String fecha = tbAsistencia.getColumnName(col);
            try {
                controlVista.validaAsistencia(fecha, col, row);
                System.out.println("funciona");
                if (bandera) {
                    String curso = (String) cbCurso.getSelectedItem();
                    String clase = (String) cbClase.getSelectedItem();
                    boolean asistencia = (boolean) tbAsistencia.getValueAt(row, col);
                    controlVista.asistencia(fecha, curso, clase, matricula, asistencia);

                }

            } catch (Exception ex) {
                System.out.println("error");
            }
        }
    }

    public void llenarCelda(int matricula, String nombre, boolean[] asistencia) {
        DefaultTableModel modelo1 = (DefaultTableModel) tbAsistencia.getModel();
        //    DefaultCellEditor[] celda1= new DefaultCellEditor[asistencia.length];

        Object[] dato = new Object[asistencia.length + 2];
        dato[0] = matricula + " ";
        dato[1] = nombre + " ";
        for (int i = 0; i < asistencia.length; i++) {
            JCheckBox checkBox = new JCheckBox();
            checkBox.setSelected(asistencia[i]);
            DefaultCellEditor celda1 = new DefaultCellEditor(checkBox);
            dato[i + 2] = celda1;
        }
        for (Object dato1 : dato) {
            System.out.println(dato1.getClass());
        }

        modelo1.addRow(dato);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbCurso = new javax.swing.JComboBox();
        cbClase = new javax.swing.JComboBox();
        btAceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAsistencia = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        cbCurso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(cbCurso);
        cbCurso.setBounds(190, 20, 250, 30);

        cbClase.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbClase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClaseActionPerformed(evt);
            }
        });
        getContentPane().add(cbClase);
        cbClase.setBounds(500, 20, 251, 30);

        btAceptar.setText("Aceptar");
        getContentPane().add(btAceptar);
        btAceptar.setBounds(243, 704, 174, 24);

        tbAsistencia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbAsistencia);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 80, 940, 210);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbClaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClaseActionPerformed
        try {
            controlVista.actualizaTabla(tbAsistencia, (String) cbClase.getSelectedItem());
        } catch (Exception ex) {
            Logger.getLogger(RegistrarAsistencia.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cbClaseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarAsistencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarAsistencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarAsistencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarAsistencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {   
                    new RegistrarAsistencia(true).setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(RegistrarAsistencia.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAceptar;
    private javax.swing.JComboBox cbClase;
    private javax.swing.JComboBox cbCurso;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbAsistencia;
    // End of variables declaration//GEN-END:variables

    @Override
    public void cargarComboBoxCurso(JComboBox cbCurso) {
        this.cbCurso = cbCurso;
    }

    @Override
    public void cargarComboBoxClase(JComboBox cbClase) {
        this.cbClase = cbClase;
    }

    @Override
    public void cargarTableAsistencia(JTable tbAsistnecia) {
        this.tbAsistencia = tbAsistnecia;
        tbAsistnecia.setVisible(true);
       
        this.tbAsistencia.setVisible(true);
         this.jScrollPane1.setVisible(true);
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        System.out.println("seleccione un titem");
        if (e.getSource() == cbCurso) {
            try {
                System.out.println("CURSOOOO");
                controlVista.actualizaComboBoxClase(cbClase, (String) cbCurso.getSelectedItem());
            } catch (Exception ex) {
                Logger.getLogger(RegistrarAsistencia.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (e.getSource() == cbClase) {
            System.out.println("claseeeeees");
            try {

                controlVista.actualizaTabla(tbAsistencia, (String) cbClase.getSelectedItem());
            } catch (Exception ex) {
                Logger.getLogger(RegistrarAsistencia.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    @Override
    public void stateChanged(ChangeEvent e) {
        System.out.println(e.getSource());
    }

    @Override
    public void validarAsistencia(boolean fechaValida, int col, int row) {
        System.out.println("entre");
        if (!fechaValida) {
            tbAsistencia.setValueAt(fechaValida, row, col);
            bandera = false;
            javax.swing.JOptionPane.showMessageDialog(null, "esta fecha no a llegado");

        } else {
            bandera = true;
        }
    }

}
